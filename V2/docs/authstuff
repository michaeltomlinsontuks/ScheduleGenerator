  Next is Step 2: Google API Setup. This is a crucial step that you will need to perform. The script I'm building will use a file called
  credentials.json to get permission to add events to your Google Calendar.

  Hereâ€™s what you need to do:

   1. Go to the Google Cloud Console: https://console.cloud.google.com/ (https://console.cloud.google.com/)
   2. Create a new project (or select an existing one).
   3. Enable the Google Calendar API:
       * In the navigation menu, go to APIs & Services > Library.
       * Search for "Google Calendar API" and enable it.
   4. Configure the OAuth consent screen:
       * Go to APIs & Services > OAuth consent screen.
       * Choose External and click Create.
       * Fill in the required fields (app name, user support email, developer contact). You can use "UP Schedule Generator" for the app name.
       * On the "Scopes" page, you don't need to add any scopes.
       * On the "Test users" page, add your own Google email address. This is important, as the app will be in "testing" mode.
   5. Create credentials:
       * Go to APIs & Services > Credentials.
       * Click Create Credentials > OAuth client ID.
       * Select Desktop app for the application type.
       * Give it a name (e.g., "ScheduleGeneratorCLI").
       * Click Create. A window will pop up with your client ID and secret.
       * Click the Download JSON button. This will download a file.
   6. Save the file: Rename the downloaded file to credentials.json and place it in the V2 directory of this project.

  This `credentials.json` file is sensitive and should not be shared or committed to version control.

  Once you have placed the credentials.json file in the V2 directory, I will proceed with Step 3: Building the Google Calendar API client. Let me know
  when you're ready.
